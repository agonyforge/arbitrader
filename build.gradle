buildscript {
    dependencies {
        classpath group: 'se.transmode.gradle', name: 'gradle-docker', version: '1.2'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'info.solidsoft.pitest' version '1.6.0'
    id 'org.owasp.dependencycheck' version '6.1.6'
    id 'org.kordamp.gradle.stats' version '0.2.2'
}

apply plugin: 'docker'

group 'com.r307'
version '0.13.0-SNAPSHOT'

bootJar {
    manifest {
        attributes('Implementation-Title':  jar.getArchiveBaseName().get(),
            'Implementation-Version': getArchiveVersion())
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}

configurations.compile {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
}

dependencies {
    compile group: 'javax.inject', name: 'javax.inject', version: '1'

    compile group: 'org.springframework.boot', name: 'spring-boot-starter'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-mail'

    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310'
    compile group: 'com.squareup.okhttp3', name:'okhttp', version:'4.9.1'

    compile group: 'org.knowm.xchange', name: 'xchange-quoine', version: '5.0.8'
    compile group: 'org.knowm.xchange', name: 'xchange-stream-kraken', version: '5.0.8'
    compile group: 'org.knowm.xchange', name: 'xchange-bitflyer', version: '5.0.8'
    compile group: 'org.knowm.xchange', name: 'xchange-stream-coinbasepro', version: '5.0.8'
    compile group: 'org.knowm.xchange', name: 'xchange-cexio', version: '5.0.8'
    compile group: 'org.knowm.xchange', name: 'xchange-poloniex', version: '5.0.8'
    compile group: 'org.knowm.xchange', name: 'xchange-stream-gemini', version: '5.0.8'
    compile group: 'org.knowm.xchange', name: 'xchange-bitstamp', version: '5.0.8'
    compile group: 'org.knowm.xchange', name: 'xchange-cobinhood', version: '5.0.8'
    compile group: 'org.knowm.xchange', name: 'xchange-binance', version: '5.0.8'

    compile group: 'com.github.seratch', name: 'jslack', version: '3.4.2'
    compile group: 'javax.websocket', name: 'javax.websocket-api', version: '1.1'

    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    compile group: 'org.apache.commons', name: 'commons-text', version: '1.9'
    compile group: 'commons-io', name: 'commons-io', version: '2.8.0'

    testCompile group: 'junit', name: 'junit', version: '4.13.2'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '3.10.0'
}

task buildDocker(type: Docker) {
    push = false
    applicationName = jar.getArchiveBaseName().get()
    dockerfile = file('src/main/docker/local/Dockerfile')
    tagVersion = "latest"
    tag = "agonyforge/${applicationName}"

    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

build.dependsOn project.tasks.buildDocker

pitest {
    excludedMethods = [
            'hashCode',
            'equals',
            'toString'
    ]
    timestampedReports = false
}

dependencyCheck {
    suppressionFile "codequality/cve-suppressions.xml"
}

check.dependsOn project.tasks.pitest, project.tasks.dependencyCheckAnalyze, project.tasks.stats

project.tasks.pitest.mustRunAfter test
